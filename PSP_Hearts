{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOTm4y+1Bti8CG2ljD1nnlu"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"PPbOD_Ou7prw","executionInfo":{"status":"ok","timestamp":1732732979657,"user_tz":-60,"elapsed":2900,"user":{"displayName":"Francesco Ciannamea","userId":"07140861464047170895"}},"outputId":"db37c8ed-36fa-4f60-926f-89b5c3eff92d","colab":{"base_uri":"https://localhost:8080/"}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.5072972343239857, 0.529)"]},"metadata":{},"execution_count":1}],"source":["import numpy as np\n","from scipy.stats import randint\n","\n","# Funzione per calcolare la probabilità teorica\n","def theoretical_probability(n, days=365):\n","    prob_no_match = 1.0\n","    for i in range(n):\n","        prob_no_match *= (days - i) / days\n","    return 1 - prob_no_match\n","\n","# Funzione per calcolare la probabilità sperimentale\n","def experimental_probability(n, days=365, experiments=1000):\n","    coincidences = 0\n","    for _ in range(experiments):\n","        birthdays = randint.rvs(1, days + 1, size=n)  # Genera n compleanni casuali\n","        if len(birthdays) > len(set(birthdays)):  # Controlla se ci sono duplicati\n","            coincidences += 1\n","    return coincidences / experiments\n","\n","# Parametri\n","n = 23  # Numero di persone\n","experiments = 1000  # Numero di esperimenti\n","\n","# Calcoli\n","theoretical_prob = theoretical_probability(n)\n","experimental_prob = experimental_probability(n, experiments=experiments)\n","\n","theoretical_prob, experimental_prob\n"]}]}